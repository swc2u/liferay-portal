/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cscl.tender.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.TrashedModel;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CsclTenderCategory service. Represents a row in the &quot;cscl_tender_category&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.cscl.tender.model.impl.CsclTenderCategoryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.cscl.tender.model.impl.CsclTenderCategoryImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CsclTenderCategory
 * @generated
 */
@ProviderType
public interface CsclTenderCategoryModel
	extends BaseModel<CsclTenderCategory>, LocalizedModel, TrashedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a cscl tender category model instance should use the {@link CsclTenderCategory} interface instead.
	 */

	/**
	 * Returns the primary key of this cscl tender category.
	 *
	 * @return the primary key of this cscl tender category
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this cscl tender category.
	 *
	 * @param primaryKey the primary key of this cscl tender category
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the tender cat ID of this cscl tender category.
	 *
	 * @return the tender cat ID of this cscl tender category
	 */
	public long getTenderCatId();

	/**
	 * Sets the tender cat ID of this cscl tender category.
	 *
	 * @param tenderCatId the tender cat ID of this cscl tender category
	 */
	public void setTenderCatId(long tenderCatId);

	/**
	 * Returns the created by ID of this cscl tender category.
	 *
	 * @return the created by ID of this cscl tender category
	 */
	public long getCreatedById();

	/**
	 * Sets the created by ID of this cscl tender category.
	 *
	 * @param createdById the created by ID of this cscl tender category
	 */
	public void setCreatedById(long createdById);

	/**
	 * Returns the create date of this cscl tender category.
	 *
	 * @return the create date of this cscl tender category
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this cscl tender category.
	 *
	 * @param createDate the create date of this cscl tender category
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the category of this cscl tender category.
	 *
	 * @return the category of this cscl tender category
	 */
	public String getCategory();

	/**
	 * Returns the localized category of this cscl tender category in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized category of this cscl tender category
	 */
	@AutoEscape
	public String getCategory(Locale locale);

	/**
	 * Returns the localized category of this cscl tender category in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized category of this cscl tender category. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getCategory(Locale locale, boolean useDefault);

	/**
	 * Returns the localized category of this cscl tender category in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized category of this cscl tender category
	 */
	@AutoEscape
	public String getCategory(String languageId);

	/**
	 * Returns the localized category of this cscl tender category in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized category of this cscl tender category
	 */
	@AutoEscape
	public String getCategory(String languageId, boolean useDefault);

	@AutoEscape
	public String getCategoryCurrentLanguageId();

	@AutoEscape
	public String getCategoryCurrentValue();

	/**
	 * Returns a map of the locales and localized categories of this cscl tender category.
	 *
	 * @return the locales and localized categories of this cscl tender category
	 */
	public Map<Locale, String> getCategoryMap();

	/**
	 * Sets the category of this cscl tender category.
	 *
	 * @param category the category of this cscl tender category
	 */
	public void setCategory(String category);

	/**
	 * Sets the localized category of this cscl tender category in the language.
	 *
	 * @param category the localized category of this cscl tender category
	 * @param locale the locale of the language
	 */
	public void setCategory(String category, Locale locale);

	/**
	 * Sets the localized category of this cscl tender category in the language, and sets the default locale.
	 *
	 * @param category the localized category of this cscl tender category
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setCategory(
		String category, Locale locale, Locale defaultLocale);

	public void setCategoryCurrentLanguageId(String languageId);

	/**
	 * Sets the localized categories of this cscl tender category from the map of locales and localized categories.
	 *
	 * @param categoryMap the locales and localized categories of this cscl tender category
	 */
	public void setCategoryMap(Map<Locale, String> categoryMap);

	/**
	 * Sets the localized categories of this cscl tender category from the map of locales and localized categories, and sets the default locale.
	 *
	 * @param categoryMap the locales and localized categories of this cscl tender category
	 * @param defaultLocale the default locale
	 */
	public void setCategoryMap(
		Map<Locale, String> categoryMap, Locale defaultLocale);

	/**
	 * Returns the status of this cscl tender category.
	 *
	 * @return the status of this cscl tender category
	 */
	@Override
	public int getStatus();

	/**
	 * Returns the trash entry created when this cscl tender category was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this cscl tender category.
	 *
	 * @return the trash entry created when this cscl tender category was moved to the Recycle Bin
	 */
	@Override
	public com.liferay.trash.kernel.model.TrashEntry getTrashEntry()
		throws PortalException;

	/**
	 * Returns the class primary key of the trash entry for this cscl tender category.
	 *
	 * @return the class primary key of the trash entry for this cscl tender category
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this cscl tender category.
	 *
	 * @return the trash handler for this cscl tender category
	 * @deprecated As of Judson (7.1.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public com.liferay.portal.kernel.trash.TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this cscl tender category is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this cscl tender category is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this cscl tender category is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this cscl tender category is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isInTrashExplicitly();

	@Override
	public boolean isInTrashImplicitly();

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

}